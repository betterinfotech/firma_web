name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest tests/

      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Build Docker image
        run: docker build --pull --no-cache -t firma_app .

      - name: Save Docker image as tarball
        run: docker save firma_app > firma_app.tar

      - name: Build env file (on runner)
        run: |
          cat > app.env << 'EOF'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          # S3 config (map common names in case your app uses a different one)
          S3_BUCKET=${{ secrets.S3_BUCKET }}
          AWS_S3_BUCKET=${{ secrets.S3_BUCKET }}
          BUCKET_NAME=${{ secrets.S3_BUCKET }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          # existing vars (if used elsewhere)
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          EOF

      - name: Deploy on EC2 via SSH
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # copy env + image tar to EC2
          scp -o StrictHostKeyChecking=no -i ec2_key.pem app.env $EC2_USER@$EC2_HOST:/home/$EC2_USER/app.env
          scp -o StrictHostKeyChecking=no -i ec2_key.pem firma_app.tar $EC2_USER@$EC2_HOST:/home/$EC2_USER/firma_app.tar

          # restart container with env-file
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            set -e
            chmod 600 /home/$USER/app.env

            docker stop firma_app || true
            docker rm firma_app || true
            docker rmi firma_app || true

            docker load < /home/$USER/firma_app.tar

            docker run -d --name firma_app -p 5000:5000 --restart unless-stopped \
              --env-file /home/$USER/app.env \
              firma_app

            # optional: clean up tarball to free space
            rm -f /home/$USER/firma_app.tar
          EOF
